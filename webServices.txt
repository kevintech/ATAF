URI Template:

    URI Template: selenium.suite.json/{application_id}
    Priority: 0
    Entity Tag: Secure Hash

Resource Handler Get

    Method: Get
    Source Type: Query
    Format: JSON
    Requires Secure Access: Yes
    Pagination Size: 1000000
    Source:

  SELECT ts.test_spec_id,
         ts.test_spec,
         ts.module_id
    FROM ataf_test_spec ts, 
         ataf_project pr
   WHERE ts.project_id = pr.project_id
     AND pr.application_id IN (select to_number(column_value) from table (ataf_pkg.ret_table(:application_id,'$'))) 
     AND ts.automate = 'Y'
ORDER BY ts.sort_order

--------------------------------------------------

URI Template:

    URI Template: selenium.test.json/{spec_id}
    Priority: 0
    Entity Tag: Secure Hash

Resource Handler Get

    Method: Get
    Source Type: Query
    Format: JSON
    Requires Secure Access: Yes
    Pagination Size: 1000000
    Source:

  SELECT ts.test_spec_id,
         ts.test_spec,
         ts.module_id
    FROM ataf_test_spec ts, 
         ataf_project pr
   WHERE ts.project_id = pr.project_id
     AND ts.test_spec_id = :spec_id
     AND ts.automate = 'Y'
ORDER BY ts.sort_order

--------------------------------------------------

URI Template:

    URI Template: seleinium.junit.report/{result_id}
    Priority: 0
    Entity Tag: Secure Hash

Resource Handler Get

PLSQL

DECLARE

  lv_test_spec_id NUMBER;

BEGIN

htp.p('<?xml version="1.0" encoding="UTF-8"?>
<testsuites>');

  ----------------------------
  -- Loop through test spec --
  ----------------------------
  FOR i IN (SELECT ats.test_spec_id,
                   ats.test_spec,
                   ats.last_updated_date,
                   ats.sort_order,
                   res.result_spec_id,
                   res.num_test_failure,
                   res.num_test_total,
                   res.num_test_error,
                   res.total_time,
                   to_char(res.date_loaded,'YYYY-MM-DD"T"HH24:MI:SS') date_loaded
            FROM ataf_test_spec ats 
            JOIN ataf_spec_result res ON ats.test_spec_id = res.test_spec_id AND res.result_id = :result_id
            WHERE ats.automate = 'Y') LOOP
  htp.p('  <testsuite name="'||i.test_spec||'" errors="'||i.num_test_error||'" tests="'||i.num_test_total||'" failures="'||i.num_test_failure||'" time="'||i.total_time||'" timestamp="'||i.date_loaded||'">');

    FOR j IN (SELECT
                sc.test_case_id,
                trim(to_char(sc.sort_order,'000')) sort_order,
                atc.test_case,
                acr.result,
                acr.error_msg
              FROM ataf_spec_case sc
              JOIN ataf_test_case atc ON sc.test_case_id = atc.test_case_id
              LEFT OUTER JOIN ataf_case_result acr ON atc.test_case_id = acr.test_case_id AND acr.result_spec_id = i.result_spec_id
              WHERE sc.test_spec_id = i.test_spec_id
              ORDER BY sc.sort_order) LOOP

      htp.p('    <testcase name="'||i.test_spec||'.'||j.sort_order||'.'||j.test_case||'" >');
      
      IF j.error_msg IS NOT NULL THEN
      
        htp.p('    <failure message="'||j.error_msg||'" ></failure>');
      
      END IF;
      
      htp.p('    </testcase>');

    END LOOP;
  
  htp.p('  </testsuite>');

  END LOOP;

htp.p('</testsuites>');

END;
--------------------------------------------------

URI Template: selenium.case.json/{spec_id}

    URI Template: 
    Priority: 0
    Entity Tag: Secure Hash

Resource Handler Get

SELECT * FROM (
    SELECT sc.test_spec_id,
         sc.test_case_id,
         --tc.test_case
         'Case_'||sc.test_case_id test_case
    FROM ataf_spec_case sc,
         ataf_test_case tc
   WHERE sc.test_case_id = tc.test_case_id
     AND sc.test_spec_id = :spec_id
ORDER BY sc.sort_order)
UNION ALL
  SELECT
    to_number(:spec_id),
    0,
    'Upload_Results_File_'||to_number(:spec_id)
  From 
    dual

--------------------------------------------------

URI Template: selenium.junit.create/{build_id}

    URI Template: 
    Priority: 0
    Entity Tag: Secure Hash

Resource Handler Get

DECLARE

  lv_result_id VARCHAR2(255);
  
BEGIN

  UPDATE ataf_result
  SET current_yn = null
  WHERE current_yn = 'Y';

  INSERT INTO ataf_result
    (build_number,
     current_yn)
  VALUES
    (:build_id,
     'Y')
  RETURNING result_id INTO lv_result_id;
  
-- JSON
  htp.p('{
    "result_id": "'||lv_result_id||'"
}');
  
END;

--------------------------------------------------

URI Template: selenium.test.json/{spec_id}

    URI Template: 
    Priority: 0
    Entity Tag: Secure Hash

Resource Handler Get

SELECT ts.test_spec_id,
         ts.test_spec,
         ts.module_id
    FROM ataf_test_spec ts, 
         ataf_project pr
   WHERE ts.project_id = pr.project_id
     AND ts.test_spec_id = :spec_id
     AND ts.automate = 'Y'
ORDER BY ts.sort_order